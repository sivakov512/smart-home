replicaCount: 1
strategyType: Recreate

image:
  repository: eclipse-mosquitto
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP

ports:
  mqtt:
    port: 1883
    protocol: TCP
  websocket:
    port: 9090
    protocol: TCP

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  existingClaim: ""
  mountPath: /mosquitto/data
  subPath: ""
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.
  ##
  storageClass: "local-path"
  size: 1Gi

existingConfigMap: ""
config: |
  persistence true
  persistence_location /mosquitto/data/
  autosave_interval 5
  log_dest stdout
  listener 1883
  listener 9090
  protocol websockets
  allow_anonymous true

## Additional volumes.
extraVolumes: []
  # - name: tls
  #   secret:
  #     secretName: mosquitto-certs

## Additional volumeMounts to the main container.
extraVolumeMounts: []
  # - name: tls
  #   mountPath: /certs
  #   subPath: cafile

authentication:
  passwordEntries: ""
  # To use authentication with mosquitto, you can set a list of password entries to be used.
  # reference https://mosquitto.org/man/mosquitto_passwd-1.html to generate these entries.
  # For example:
  # passwordEntries: |-
  #   user1:$6$BKzw0RKerxV4Esbj$Uz5slWGB1TiOtYIEokEl0eR1YSEQAdKpcdRYMsLYbwjktlVzdLyGk41YCPGyMLnBePtdwPhkcm8kjGI0R9s57w==
  #   user2:$6$b5vYuHrSLj48Ii32$NjlbnatIaUQSsNvxxTpawpav6NPyZ8QhGrdEVGtyU1rgEGjNzVGKlstRg29FV6MFTPs/ugPA8D5I5+qRcIMXSg==
  passwordFilePath: "/etc/mosquitto/passwordfile"

authorization:
  acls: ""
  # To use authorizations with mosquitto, you can set a list of per user or pattern-based rules.
  # reference https://mosquitto.org/man/mosquitto-conf-5.html for further information.
  # For example:
  # acls: |-
      # zigbee2mqtt ACLs
      # user zigbee2mqtt
      # topic readwrite zigbee2mqtt/#
      # topic readwrite homeassistant/#
      # Tasmota-compatible ACLs
      # pattern read cmnd/%u/#
      # pattern write stat/%u/#
      # pattern write tele/%u/#
  aclfilePath: "/etc/mosquitto/aclfile"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
