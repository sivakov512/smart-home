name: boiler

on:
  push:
    branches: [master]
    paths:
      - 'apps/boiler/**'
      - .github/workflows/boiler.yaml
  pull_request:
    branches: [master]
    paths:
      - 'apps/boiler/**'
      - .github/workflows/boiler.yaml

defaults:
  run:
    working-directory: ./apps/boiler/

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sivakov512/boiler

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          override: true
          profile: minimal
          toolchain: stable

      - id: prep
        run: |
          echo "base_key=${{ github.workflow }}-${{ github.job }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('apps/boiler/Cargo.lock') }}" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            apps/boiler/target
          key: ${{ steps.prep.outputs.base_key }}-${{ github.ref }}
          restore-keys: |
            ${{ steps.prep.outputs.base_key }}-refs/heads/master
            ${{ steps.prep.outputs.base_key }}-

      - run: cargo test

      - run: cargo fmt --all -- --check

      - run: cargo clippy -- -D warnings

  test-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          SHORT_SHA=`git rev-parse --short HEAD`
          IMAGE=$REGISTRY/$IMAGE_NAME
          echo ::set-output name=latest::${IMAGE}:latest
          echo ::set-output name=current::${IMAGE}:${SHORT_SHA}

      - uses: docker/build-push-action@v5
        with:
          context: ./apps/boiler/
          platforms: linux/amd64
          push: false
          tags: |
            ${{ steps.prep.outputs.latest }}
            ${{ steps.prep.outputs.current }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  publish:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          SHORT_SHA=`git rev-parse --short HEAD`
          IMAGE=$REGISTRY/$IMAGE_NAME
          echo ::set-output name=latest::${IMAGE}:latest
          echo ::set-output name=current::${IMAGE}:${SHORT_SHA}

      - uses: docker/build-push-action@v5
        with:
          context: ./apps/boiler/
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ${{ steps.prep.outputs.latest }}
            ${{ steps.prep.outputs.current }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
